### PRADS ROADMAP

From where we are now - 12 May 2009

Point Release 0.1 - Reached 19 May 2009
 * SYN/ACK
 * Persistant local DB (SQLite)
 * Database (SQL via DBI)
 * Text File Log via tee
 * MAC sig matching

Point Release 0.2
 * UDP asset detection
 * UDP os fingerprinting
 * ICMP os fingerprinting
 * Text File Log (default, not stdout)
 * prads.deb and prads.rpm package 

Point Release 0.3
 * udp-service fingerprinting and detection
 * tcp-service detection
 * Client application Fingerprinting 

Point Release 0.4
 * Switch discover?
 * Router discover?
 * hops
 * NAT
 (* prads2sguil.pl script)

Point Release 0.4
 * Graphic display of network topology

.
.
.
.


Point Release 1.0
 * When we are satisfied with:
   - performance
   - output
   - functionality


Point Release 2.0
 * If performance is an issue ? C/C++ ?
 * CVE coorolation on services, not in prads, but prads GUI ?

--- random ideas for implementation ---
 - MVCC lockless assets in shared memory ring-buffer (shmat())
 - keep last x updates + random discards / vacuum

 * asset struct / shared fields. keep in same hashfunc : hash lib!
 * sigs -> lookups
 * API for plugins = 
 - Lua plugins
 log / visualize / stats / db insert
 * get prads.c to prads.pl state. superdaemon + subfunction daemons
 -> duplicate the commandline
 * DDoS detection
 * phase plane analysis of initial SEQ = fingerprint signatures
 * release packages: deb/rpm
 * async IO and other scaling factors
 * mobile (wifi,ether,ip,tcp)-frame scanning app for android/iPhone (+ autohack?)
 * autogen nagios host table
 * autogen snort host attributes
 * optimize PCRE matcher
 * graphviz dot visualizations
 * realitme / SDL visio map
