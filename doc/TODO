==========
#TODO Passive Real-time Asset Detection System
==========

1. Discover host on ICMP too # DONE
2. Discover Network Assets based on ARP. # DONE
3. Internal table of [hosts(IP),services(port-#),ID string(banner of service or string that match),timestamp] # DONE
4. TCP,UDP,ICMP... Statistic Information ?

5. p0f - Passive OS fingerprinting...
   - Together with discovering hosts (and trying to get OS from banner strings etc.), PRADS should
     emulate p0f logic to detect OS based on tcp/icmp/udp... fingerprinting...
   - Start with SYN fingerprinting... # DONE
   - I believe that we should have SYN+ACK also :/ # DONE

6. Goes without saying, but adding it as a point : client OS and Client programs fingerprinting:
   Like: "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.6) Gecko/2009020911 Ubuntu/8.10 (intrepid) Firefox/3.0.6 Ubiquity/0.1.5"
         "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.6) Gecko/2009011913 Firefox/3.0.6"
         "Mozilla/5.0 (Windows; U; Windows NT 6.0; fr; rv:1.9.0.6) Gecko/2009011913 Firefox/3.0.6"

7. Different output plugins...
   - PoC should send to stdout or/and logfile (text).
   - Next would be mysql # DONE
   - Sguil (Add a switch to make the output better for sguil?)

8. GUI - by web or "desktop"
   - See your network, different OS and services.
   - See firewalls





MAC asset detection

Sep 04 21:00:45 <qru>    * action_id            action
Sep 04 21:00:45 <qru>    * 01                   TCP / ICMP Asset Discovered
Sep 04 21:00:45 <qru>    * 02                   ARP Asset Discovered
Sep 04 21:00:45 <qru>    * 03                   TCP / ICMP Statistic Information

Kacper's crazy ideas:

- switch/router topology by sniffing OSPF/BGP/RSTP
-.geoip maps ( passive lookup )
-.sniff DNS lookups

Kacper's TODO items:
 - investigate NetPacket slowness
 - update UNKNOWN entries when they match.

Edward's TODO items:
 - fix up icmp OS fingerprinting
 - fic up UDP  OS fingerprinting
 - fix SERVICE, both TCP and UDP... together with Kacper?
   Need to make it faster, and maybe drop newlines etc.?
   Kacper mentioned precompiling regexp

