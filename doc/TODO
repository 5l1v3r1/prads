==========
#TODO Passive Real-time Asset Detection System
==========

1. Squil!

2. inform firewall / snort / nessus / satan etc

3. Stateful conntrack => trust rel

4. TCP,UDP,ICMP... Statistic Information ?

5. p0f - Passive OS fingerprinting...
   - Together with discovering hosts (and trying to get OS from banner strings etc.), PRADS should
     emulate p0f logic to detect OS based on tcp/icmp/udp... fingerprinting...

6. Goes without saying, but adding it as a point : client OS and Client programs fingerprinting:
   Like: "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.6) Gecko/2009020911 Ubuntu/8.10 (intrepid) Firefox/3.0.6 Ubiquity/0.1.5"
         "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.6) Gecko/2009011913 Firefox/3.0.6"
         "Mozilla/5.0 (Windows; U; Windows NT 6.0; fr; rv:1.9.0.6) Gecko/2009011913 Firefox/3.0.6"
         "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; nb-no) AppleWebKit/525.28.3 (KHTML, like Gecko) Version/3.2.3 Safari/525.28.3"

7. Different output plugins...
   - PoC should send to stdout or/and logfile (text).
   - Sguil (Add a switch to make the output better for sguil?)

8. GUI - by web or "desktop"
   - See your network, different OS and services.
   - See firewalls
   - summaries: severity/vuln/port/proto/ip/
   /net class abc/mail/os/service/ssh/web server/web client/
   /trends/.


MAC asset detection

Sep 04 21:00:45 <qru>    * action_id            action
Sep 04 21:00:45 <qru>    * 01                   TCP / ICMP Asset Discovered
Sep 04 21:00:45 <qru>    * 02                   ARP Asset Discovered
Sep 04 21:00:45 <qru>    * 03                   TCP / ICMP Statistic Information

Kacper's crazy ideas:

- switch/router topology by sniffing OSPF/BGP/RSTP
-.geoip maps ( passive lookup )
-.sniff DNS lookups

Kacper's TODO items:
 - OPTIMIXE: 
   .investigate NetPacket slowness
   .optimize SERVICE matching - reduce universe of regexes to match by
   finding byte-sigs before regex.
 - trust relationships :-)
 - active prads-informed firewall
 - UPnP. BGP IGMP, multicast, tcp6 etc etc
 - how to do vuln checks? / match to db
 - PRADS console (woot. leet!)

Edward's TODO items:
 - fix SERVICE, both TCP and UDP... together with Kacper?
   Need to make it faster, and maybe drop newlines etc.?
   Kacper mentioned precompiling regexp
 - IP statistics... Some way of collecting stats about sessions..
   $session_tracking->{$src_ip}->{$src_port}->{$dst_ip}->{$dst_port}->{ip_type}->{$src_byte}->{$dst_byte}->{$src_packets}->{$dst_packets}->{$start_timestamp}->{$end_timestamp}            ?
   #UDP example: 
   $session_tracking->{10.10.10.12}->{1234}->{10.10.10.14}->{53}->{17}->{102}->{433}->{5}->{21}->{1243504322}->{1243508001}
   #TCP example:
   $session_tracking->{10.10.10.12}->{1234}->{10.10.10.14}->{53}->{6}->{1002021}->{92311}->{39811}->{1021}->{1243504322}->{1243508001}
   #ICMP example:
   $session_tracking->{10.10.10.12}->{0}->{10.10.10.14}->{0}->{1}->{102}->{433}->{5}->{21}->{1243504322}->{1243508001}
   # for icmp $src_port could be $type and $dst_port could be $code ? Im smart... uhh


DONE
1. Discover host on ICMP too # DONE
2. Discover Network Assets based on ARP. # DONE
3. Internal table of [hosts(IP),services(port-#),ID string(banner of service or string that match),timestamp] # DONE
- Start with SYN fingerprinting... # DONE
- I believe that we should have SYN+ACK also :/ # DONE
- fix up icmp OS fingerprinting # DONE
- fic up UDP  OS fingerprinting # DONE
- Next would be mysql # DONE
   .DBI optimizations> 
   ..async DBI commits
   ..in-mem db + persistance if $PERSIST
 - update UNKNOWN entries when they match.
 - option 76 crash
 - CREATE TABLE failed blah error message.


